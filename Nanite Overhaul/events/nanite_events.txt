
# declare name space
namespace = nanomod



	

	


country_event = { 
	id = nanomod.6
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		give_technology = {
			tech = tech_nanomod_ap
		}
	}
}




country_event = {
	id = nanomod.1
	is_triggered_only = yes                                     # adds nanite leader traits to present leaders
	hide_window = yes

	trigger = {
		OR = {
			has_tradition = tr_nanotech_5
		}  #had_country_flag = nanotech flag????
	}

	immediate = {
		every_owned_leader = {
			limit = {
				species = {
					OR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				NOR = {
					has_trait = leader_trait_nanomachine
					has_leader_flag = renowned_leader
					has_leader_flag = legendary_leader
				}
				is_gestalt_node = no
			}
			if = {
				limit = {
					has_trait = trait_machine_unit
				}
				add_trait_no_notify = leader_trait_nanomachine
			}
			else = {
				remove_trait = leader_trait_synthetic
				add_trait_no_notify = leader_trait_nanomachine
			}
		}
		every_pool_leader = {
			limit = {
				species = {
					OR = {
						has_trait = trait_machine_unit
						has_trait = trait_mechanical
					}
				}
				NOT = { has_trait = leader_trait_nanomachine }
			}
			if = {
				limit = {
					has_trait = trait_machine_unit
				}
				add_trait_no_notify = leader_trait_nanomachine
			}
			else = {
				remove_trait = leader_trait_synthetic
				add_trait_no_notify = leader_trait_nanomachine
			}
		}
		create_message = {
			type = MESSAGE_ALL_GAINED_TRAIT
			localization = MESSAGE_ALL_GAINED_TRAIT_DESC
			days = @toast_message_days
			variable = {
				type = key
				value = leader_trait_nanomachine
				localization = TRAIT
			}
			variable = {
				key = TRAIT_KEY
				value = leader_trait_nanomachine
			}
			variable = {
				key = "border"
				value = "GFX_invisible"
			}
		}
	}
}

# New Leaders Get Nanotech Trait
country_event = {
	id = nanomod.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_tradition = tr_nanotech_4
			has_country_flag = synth_nanotech # again no clue if this works ## this does not work but I am keeping it in incase I find the proper flag. failsafes are good!
		}
		from = {
			species = {
				OR = {
					has_trait = trait_machine_unit
					has_trait = trait_mechanical
				}
			}
		}
	}

	immediate = {
		from = {
			if = {
				limit = {
					has_trait = trait_machine_unit
				}
				add_trait_no_notify = leader_trait_nanomachine
			}
			else = {
				remove_trait = leader_trait_synthetic
				add_trait_no_notify = leader_trait_nanomachine
			}
		}
	}
}

#pops get nano trait
country_event = {
	id = nanomod.3
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		every_owned_pop_group = {
			limit = {
				is_same_species = root
				species = {
					has_nanobot_trait = no
				}
			}
			modify_species = {
				species = this
				add_trait = trait_nanobot
			}
#			species = { save_event_target_as = psionic_species }
		}
	}
}

#nanobot trait ship build speed modifier # This event checks for the total amount of nanobot pops and then multiplies that number by the trait build speed static modifier to provide the empire buff.
country_event = {
	id = nanomod.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		count_owned_species = {
			count = all  # not sure if this is the correct/best trigger to use
			limit = { has_trait = trait_nanobot }          
	    }
                     # ok so turns out this is all fucked so I will be removing it once I make the script value
    }
    
	immediate = {
		multiply_variable = {
			which = consumer_goods_income_to_give  #temp for testing
			value = trigger:num_pops
		}
	}
	
}
# nanite killer
planet_event = {
	id = nanomod.12
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { is_planet_class = pc_ai }
		}
		from.owner = { country_event = { id = nanomod.121 } }
	}

	#Dismantle observation post
	if = {
		limit = {
			has_observation_outpost = yes
		}
		observation_outpost_owner = {
			country_event = { id = planet_destruction.1000 days = 1 }
		}
	}

	# Contingency Machine World
	if = {
		limit = {
			is_planet_class = pc_ai
			NOT = { has_planet_flag = machine_lair }
		}
		set_planet_flag = destroyed_by_colossus
		set_planet_flag = planet_cracked
		planet_event = { id = crisis.2040 }
	}

	# Contingency Final Machine World
	if = {
		limit = {
			is_planet_class = pc_ai
			has_planet_flag = machine_lair
		}
		set_planet_flag = destroyed_by_colossus
		set_planet_flag = planet_cracked
		from.owner = { save_event_target_as = final_machine_world_destroyer }
		stop_crisis_sound = yes
		planet_event = { id = crisis.2046 }
	}

	# Swarm Situation Log counter
	if = {
		limit = {
			exists = owner
			owner = { is_country_type = swarm }
		}
		every_country = {
			limit = { has_event_chain = "prethoryn_scourge_chain" }
			add_event_chain_counter = {
				event_chain = "prethoryn_scourge_chain"
				counter = "infested_worlds"
				amount = -1
			}
			add_event_chain_counter = {
				event_chain = "prethoryn_scourge_chain"
				counter = "infested_worlds_cleansed"
				amount = 1
			}
		}
	}

	if = {
		limit = {
			OR = {
				is_active_resolution = "resolution_rulesofwar_reverence_for_life"
				is_active_resolution = "resolution_rulesofwar_independent_tribunals"
				is_active_resolution = "resolution_rulesofwar_last_resort_doctrine"
				is_active_resolution = "resolution_rulesofwar_demobilization_initiative"
			}
		}
		from.owner = {
			set_timed_country_flag = { flag = resolution_breached_fired_cracker days = 3600 }
		}
	}

	# Exterminatus Achievement
	if = {
		limit = { is_capital = yes }
		from.owner = { set_country_flag = exterminatus }
	}
	if = {
		limit = {
			exists = owner
			owner = {
				NOT = { is_same_value = from.owner }
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
			}
		}
		# Generate threat
		if = {
			limit = {
				is_colony = yes
			}
			add_threat = { who = from.owner amount = 3 }
			# modifier for allies + those upset by genocide
			every_country = {
				limit = {
					NOR = {
						is_same_value = from.owner
						is_same_value = root.owner
						AND = {
							has_federation = yes
							is_in_federation_with = from.owner
						}
					}
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						AND = {
							has_federation = yes
							is_in_federation_with = root.owner
						}
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							OR = {
								is_egalitarian = yes
								is_xenophile = yes
							}
						}
					}
				}
				if = {
					limit = { root = { is_colony = no } }
					add_opinion_modifier = {
						modifier = opinion_cracked_an_uninhabited_world
						who = from.owner
					}
				}
				else = {
					add_opinion_modifier = {
						modifier = opinion_cracked_a_world
						who = from.owner
					}
				}
			}
		}
		else = {
			add_threat = { who = from.owner amount = 1 }
		}
		# modifiers for victim
		owner = {
			if = {
				limit = { root = { is_colony = no } }
				add_opinion_modifier = {
					modifier = opinion_cracked_my_uninhabited_world
					who = from.owner
				}
			}
			else = {
				add_opinion_modifier = {
					modifier = opinion_cracked_my_world
					who = from.owner
				}
			}
			if = {
				limit = { NOT = { has_ethic = ethic_gestalt_consciousness } }
				add_modifier = {
					modifier = colossus_victim
					days = 10800 # 30 years
				}
			}
		}
		if = {
			limit = {
				exists = owner
				owner = { is_country_type = primitive }
			}
			# modifier for allies + those upset by genocide
			every_country = {
				limit = {
					NOT = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							NOR = {
								is_xenophobe = yes
								is_homicidal = yes
								is_xenophile = yes
							}
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_cracked_a_primitive_world
					who = from.owner
				}
			}
			every_country = {
				limit = {
					NOT = { is_same_value = from.owner }
					OR = {
						has_communications = from.owner
						has_communications = root.owner
					}
					OR = {
						has_ai_personality = awakened_fallen_empire_xenophile
						AND = {
							is_country_type = default
							is_xenophile = yes
						}
					}
				}
				add_opinion_modifier = {
					modifier = opinion_cracked_a_primitive_world_phile
					who = from.owner
				}
			}
		}
	}
	# Add war exhaustion to planet owner
	if = {
		limit = {
			exists = owner
		}
		owner = {
			if = {
				limit = { #isn't the case when the crisis bombards planets, for instance
					is_at_war_with = from.fleet.owner
				}
				add_static_war_exhaustion = {
					attacker = from.fleet.owner
					location = root
					value_for_planet_destruction = 1.0
				}
			}
		}
	}

	every_owned_pop_group = {
		from.owner = {
			add add_resource = {
				nanites = 5000
			}
		}
	}

	every_owned_pop_group = {
		kill_all_pop = yes
	}

	if = {
		limit = {
			exists = orbital_defence
		}
		destroy_fleet = orbital_defence
	}
	remove_all_buildings = yes
	remove_all_districts = yes
	# destroy habitats and ringworlds
	if = {
		limit = {
			is_planet_class = pc_habitat
		}
		spawn_habitat_cracker_effect = yes
	}
	else_if = {
		limit = {
			is_planet_class = pc_cosmogenesis_world
		}
		spawn_lathe_cracker_effect = yes
	}
	else_if = {
		limit = {
			is_ringworld = yes
		}
		spawn_ringworld_cracker_effect = yes
		change_pc = pc_ringworld_habitable_damaged
	}
	else_if = {
		limit = {
			is_ringworld = yes
		}
		spawn_ringworld_cracker_effect = yes
		change_pc = pc_ringworld_habitable_damaged
	}
	else_if = {
		limit = { Or = { is_colony = yes
		                 is_pre_ftl_colony_type = yes
						 }
				}
		change_pc = pc_nanotech
		clear_deposits = yes
		add_planet_devastation = -100
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
				add_deposit = d_nano_corpse
			}
			1 = {
			}
		}
	}


	else_if = {
		limit = { Or = { habitable_planet = yes 
						 is_colonizable = yes
						 is_terraforming_candidate = yes
						 colonizable_planet = yes
						 }
				}
		change_pc = pc_nanotech
		clear_deposits = yes
		add_planet_devastation = -100
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
			}
			1 = {
			}
		}
	}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
		random_list = {
			1 = {
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation
				add_deposit = d_nanotech_devastation

			}
			1 = {
			}
		}
	}
 }
 


country_event = {
id = nanomod.121
title = planet_nanomod.121.name
desc = planet_nanomod.121.desc
picture = GFX_evt_gray_gooed_planet
location = from


is_triggered_only = yes

trigger = {
	NOT = { has_country_flag = fired_cracker }
	FROM = {
		NOR = {
			is_planet_class = pc_habitat
			is_planet_class = pc_ringworld_habitable
			is_planet_class = pc_shattered_ring_habitable
		}
	}
}

immediate = {
	set_country_flag = fired_cracker
}

option = {
	name = OK
	trigger = {
		NOR = {
			has_valid_civic = civic_fanatic_purifiers
			has_valid_civic = civic_machine_terminator
		}
	}
}
}